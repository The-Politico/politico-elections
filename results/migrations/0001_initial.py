# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-16 12:32
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BallotAnswer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, editable=False, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=255)),
                ('short_label', models.CharField(blank=True, max_length=50, null=True)),
                ('answer', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BallotMeasure',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, editable=False, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=255)),
                ('short_label', models.CharField(blank=True, max_length=50, null=True)),
                ('question', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ap_candidate_id', models.CharField(max_length=255)),
                ('aggregable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, editable=False, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=255)),
                ('short_label', models.CharField(blank=True, max_length=50, null=True)),
                ('effective_start', models.DateTimeField(null=True)),
                ('effective_end', models.DateTimeField(null=True)),
                ('code', models.CharField(help_text='Code representing a geography: FIPS code for states and         counties, district number for districts, precinct number for         precincts, etc.', max_length=200)),
                ('code_components', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Component parts of code')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DivisionLevel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, editable=False, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='results.DivisionLevel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Election',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='ElectionCycle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, editable=False, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=255)),
                ('short_label', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElexResult',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('elexid', models.CharField(max_length=80)),
                ('raceid', models.CharField(max_length=5, null=True)),
                ('racetype', models.TextField(null=True)),
                ('racetypeid', models.CharField(max_length=1, null=True)),
                ('ballotorder', models.PositiveSmallIntegerField(null=True)),
                ('candidateid', models.TextField(null=True)),
                ('description', models.TextField(null=True)),
                ('delegatecount', models.IntegerField(null=True)),
                ('electiondate', models.DateField(null=True)),
                ('electtotal', models.PositiveSmallIntegerField(null=True)),
                ('electwon', models.PositiveSmallIntegerField(null=True)),
                ('fipscode', models.CharField(max_length=5, null=True)),
                ('first', models.TextField(null=True)),
                ('incumbent', models.BooleanField(default=False)),
                ('initialization_data', models.BooleanField(default=False)),
                ('is_ballot_measure', models.BooleanField(default=False)),
                ('last', models.TextField(null=True)),
                ('lastupdated', models.DateTimeField(null=True)),
                ('level', models.TextField(null=True)),
                ('national', models.BooleanField(default=False)),
                ('officeid', models.CharField(max_length=1, null=True)),
                ('officename', models.TextField(null=True)),
                ('party', models.CharField(max_length=3, null=True)),
                ('polid', models.TextField(null=True)),
                ('polnum', models.TextField(null=True)),
                ('precinctsreporting', models.PositiveSmallIntegerField(null=True)),
                ('precinctsreportingpct', models.DecimalField(decimal_places=6, max_digits=7, null=True)),
                ('precinctstotal', models.PositiveSmallIntegerField(null=True)),
                ('reportingunitid', models.TextField(null=True)),
                ('reportingunitname', models.TextField(null=True)),
                ('runoff', models.BooleanField(default=False)),
                ('seatname', models.TextField(null=True)),
                ('seatnum', models.PositiveSmallIntegerField(null=True)),
                ('statename', models.TextField(null=True)),
                ('statepostal', models.CharField(max_length=2, null=True)),
                ('test', models.BooleanField(default=False)),
                ('uncontested', models.BooleanField(default=False)),
                ('votecount', models.PositiveIntegerField(null=True)),
                ('votepct', models.DecimalField(decimal_places=6, max_digits=7, null=True)),
                ('winner', models.BooleanField(default=False)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.Candidate')),
            ],
        ),
        migrations.CreateModel(
            name='Geography',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_start', models.DateTimeField(null=True)),
                ('effective_end', models.DateTimeField(null=True)),
                ('simplification', models.FloatField(help_text='Minimum quantile of planar         triangle areas for simplfying topojson.', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('topojson', django.contrib.postgres.fields.jsonb.JSONField()),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geographies', to='results.Division')),
                ('subdivision_level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='results.DivisionLevel')),
            ],
            options={
                'verbose_name_plural': 'Geographies',
            },
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, editable=False, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=255)),
                ('short_label', models.CharField(blank=True, max_length=50, null=True)),
                ('level', models.PositiveSmallIntegerField(choices=[(0, 'Federal'), (1, 'State'), (2, 'Municipal')])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, editable=False, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=255)),
                ('short_label', models.CharField(blank=True, max_length=50, null=True)),
                ('ap_code', models.CharField(max_length=3)),
                ('aggregate_candidates', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, editable=False, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=255)),
                ('short_label', models.CharField(blank=True, max_length=50, null=True)),
                ('first_name', models.CharField(max_length=255, null=True)),
                ('middle_name', models.CharField(max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255)),
                ('suffix', models.CharField(max_length=10, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, editable=False, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=255)),
                ('short_label', models.CharField(blank=True, max_length=50, null=True)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.Election')),
                ('party', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='results.Party')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RaceType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, editable=False, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=255)),
                ('short_label', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_count', models.PositiveIntegerField()),
                ('vote_pct', models.DecimalField(decimal_places=3, max_digits=5)),
                ('total_votes', models.PositiveIntegerField()),
                ('ballot_measure', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='results.BallotMeasure')),
                ('candidate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='results.Candidate')),
                ('geography', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.Geography')),
            ],
        ),
        migrations.CreateModel(
            name='ResultRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, editable=False, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=255)),
                ('short_label', models.CharField(blank=True, max_length=50, null=True)),
                ('geography', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.Geography')),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.Office')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='race',
            name='race_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.RaceType'),
        ),
        migrations.AddField(
            model_name='race',
            name='seat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.Seat'),
        ),
        migrations.AddField(
            model_name='elexresult',
            name='geography',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.Geography'),
        ),
        migrations.AddField(
            model_name='elexresult',
            name='resultrun',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.ResultRun'),
        ),
        migrations.AddField(
            model_name='election',
            name='cycle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.ElectionCycle'),
        ),
        migrations.AddField(
            model_name='division',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.DivisionLevel'),
        ),
        migrations.AddField(
            model_name='division',
            name='parent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='results.Division'),
        ),
        migrations.AddField(
            model_name='candidate',
            name='party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.Party'),
        ),
        migrations.AddField(
            model_name='candidate',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.Person'),
        ),
        migrations.AddField(
            model_name='candidate',
            name='race',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.Race'),
        ),
        migrations.AddField(
            model_name='ballotmeasure',
            name='election',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.Election'),
        ),
        migrations.AddField(
            model_name='ballotmeasure',
            name='geography',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.Geography'),
        ),
        migrations.AddField(
            model_name='ballotanswer',
            name='ballot_measure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.BallotMeasure'),
        ),
    ]
