# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-16 15:58
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('geography', '0001_initial'),
        ('election', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='APElectionMeta',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ap_election_id', models.CharField(max_length=10)),
                ('called', models.BooleanField(default=False)),
                ('tabulated', models.BooleanField(default=False)),
                ('override_ap_call', models.BooleanField(default=False)),
                ('override_ap_votes', models.BooleanField(default=False)),
                ('precincts_reporting', models.PositiveIntegerField(null=True)),
                ('precincts_total', models.PositiveIntegerField(null=True)),
                ('precincts_reporting_pct', models.DecimalField(decimal_places=3, max_digits=5, null=True)),
                ('ballot_measure', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='election.BallotMeasure')),
                ('election', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='election.Election')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Delegates',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('count', models.PositiveIntegerField()),
                ('pct', models.DecimalField(decimal_places=3, max_digits=5)),
                ('total', models.PositiveSmallIntegerField()),
                ('superdelegates', models.BooleanField(default=False)),
                ('candidate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='election.Candidate')),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geography.Division')),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='election.Election')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElectoralVotes',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('count', models.PositiveIntegerField()),
                ('pct', models.DecimalField(decimal_places=3, max_digits=5)),
                ('total', models.PositiveSmallIntegerField()),
                ('winning', models.BooleanField(default=False)),
                ('candidate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='election.Candidate')),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geography.Division')),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='election.Election')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElexResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elexid', models.CharField(max_length=80)),
                ('raceid', models.CharField(max_length=5, null=True)),
                ('racetype', models.TextField(null=True)),
                ('racetypeid', models.CharField(max_length=1, null=True)),
                ('ballotorder', models.PositiveSmallIntegerField(null=True)),
                ('candidateid', models.TextField(null=True)),
                ('description', models.TextField(null=True)),
                ('delegatecount', models.IntegerField(null=True)),
                ('electiondate', models.DateField(null=True)),
                ('electtotal', models.PositiveSmallIntegerField(null=True)),
                ('electwon', models.PositiveSmallIntegerField(null=True)),
                ('fipscode', models.CharField(max_length=5, null=True)),
                ('first', models.TextField(null=True)),
                ('incumbent', models.BooleanField(default=False)),
                ('initialization_data', models.BooleanField(default=False)),
                ('is_ballot_measure', models.BooleanField(default=False)),
                ('last', models.TextField(null=True)),
                ('lastupdated', models.DateTimeField(null=True)),
                ('level', models.TextField(null=True)),
                ('national', models.BooleanField(default=False)),
                ('officeid', models.CharField(max_length=1, null=True)),
                ('officename', models.TextField(null=True)),
                ('party', models.CharField(max_length=3, null=True)),
                ('polid', models.TextField(null=True)),
                ('polnum', models.TextField(null=True)),
                ('precinctsreporting', models.PositiveSmallIntegerField(null=True)),
                ('precinctsreportingpct', models.DecimalField(decimal_places=6, max_digits=7, null=True)),
                ('precinctstotal', models.PositiveSmallIntegerField(null=True)),
                ('reportingunitid', models.TextField(null=True)),
                ('reportingunitname', models.TextField(null=True)),
                ('runoff', models.BooleanField(default=False)),
                ('seatname', models.TextField(null=True)),
                ('seatnum', models.PositiveSmallIntegerField(null=True)),
                ('statename', models.TextField(null=True)),
                ('statepostal', models.CharField(max_length=2, null=True)),
                ('test', models.BooleanField(default=False)),
                ('uncontested', models.BooleanField(default=False)),
                ('votecount', models.PositiveIntegerField(null=True)),
                ('votepct', models.DecimalField(decimal_places=6, max_digits=7, null=True)),
                ('winner', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ResultRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Votes',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('count', models.PositiveIntegerField()),
                ('pct', models.DecimalField(decimal_places=3, max_digits=5)),
                ('total', models.PositiveSmallIntegerField()),
                ('winning', models.BooleanField(default=False)),
                ('ballot_answer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='election.BallotAnswer')),
                ('candidate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='election.Candidate')),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geography.Division')),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='election.Election')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='elexresult',
            name='resultrun',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vote.ResultRun'),
        ),
    ]
